{"version":3,"sources":["webpack://open-git-ops/./src/components/ui/card-event.js","webpack://open-git-ops/./src/components/ui/card-event-alt.js","webpack://open-git-ops/./src/components/events.js","webpack://open-git-ops/./src/pages/events.js","webpack://open-git-ops/./src/svg/pin.svg","webpack://open-git-ops/./src/images/thumbnail-default.png"],"names":["date","title","location","url","className","to","label","Events","upcomingLimit","pastLimit","Date","query","useStaticQuery","upcomingEvents","allMdx","edges","filter","event","eventDate","node","frontmatter","startDate","sort","a","b","pastEvents","length","toDateString","map","item","index","key","attend","defaultProps","md","xl","recordings","decor","description","href","image","thumbnail","React","Pin","props","createElement","module","exports","default"],"mappings":"gNAyBA,EArBkB,SAAC,GAAoC,IAAlCA,EAAiC,EAAjCA,KAAMC,EAA2B,EAA3BA,MAAOC,EAAoB,EAApBA,SAAUC,EAAU,EAAVA,IAC1C,OACE,uBAAKC,UAAU,iFACb,uBAAKA,UAAU,gCAAgCJ,GAC/C,uBAAKI,UAAU,sCAAsCH,GACrD,uBAAKG,UAAU,0BACb,gBAAC,IAAD,CAASA,UAAU,2BACnB,uBAAKA,UAAU,UAAUF,IAG1BC,GACC,gBAAC,IAAD,CACEE,GAAIF,EACJG,MAAM,SACNF,UAAU,wFCOpB,EArBqB,SAAC,GAAoC,IAAlCJ,EAAiC,EAAjCA,KAAMC,EAA2B,EAA3BA,MAAOC,EAAoB,EAApBA,SAAUC,EAAU,EAAVA,IAC7C,OACE,uBAAKC,UAAU,qEACb,uBAAKA,UAAU,wCAAwCJ,GACvD,uBAAKI,UAAU,6BAA6BH,GAC5C,uBAAKG,UAAU,2BACb,gBAAC,IAAD,CAASA,UAAU,2BACnB,uBAAKA,UAAU,kBAAkBF,IAGlCC,GACC,gBAAC,IAAD,CACEE,GAAIF,EACJG,MAAM,aACNF,UAAU,6F,mBCVdG,EAAS,SAATA,EAAU,GAAkC,IAAhCC,EAA+B,EAA/BA,cAAeC,EAAgB,EAAhBA,UACzBT,EAAO,IAAIU,KACXC,GAAQC,oBAAe,cAuBvBC,EAAiBF,EAAMG,OAAOC,MACjCC,QAAO,SAAAC,GAAU,IAAD,EACTC,EAAS,UAAGD,EAAME,KAAKC,mBAAd,aAAG,EAAwBpB,KACpCqB,EAAY,IAAIX,KAAKQ,GAC3B,QAAOA,GAAYG,EAAYrB,KAEhCsB,MAAK,SAACC,EAAGC,GAAJ,eAAU,UAAAD,EAAEJ,KAAKC,mBAAP,eAAoBpB,OAApB,UAA2BwB,EAAEL,KAAKC,mBAAlC,aAA2B,EAAoBpB,SAE3DyB,EAAad,EAAMG,OAAOC,MAAMC,QAAO,SAAAC,GAAU,IAAD,EAC9CC,EAAS,UAAGD,EAAME,KAAKC,mBAAd,aAAG,EAAwBpB,KACpCqB,EAAY,IAAIX,KAAKQ,GAC3B,QAAOA,GAAYG,EAAYrB,KAGjC,OACE,uBAAKI,UAAU,kCACb,gBAAC,IAAD,CAAKA,UAAU,iFAEf,gBAAC,IAAD,KACGS,EAAea,OAAS,GACvB,gBAAC,WAAD,KACE,uCACY,wBAAMtB,UAAU,eAAhB,WAEZ,mCAAWJ,EAAK2B,gBAEhB,uBAAKvB,UAAU,6BACZS,EAAee,KACd,SAACC,EAAMC,GAAP,mBACEA,EAAQtB,GACN,gBAAC,EAAD,CACEuB,IAAKD,EACL9B,KAAI,UAAE6B,EAAKV,KAAKC,mBAAZ,aAAE,EAAuBpB,KAC7BC,MAAK,UAAE4B,EAAKV,KAAKC,mBAAZ,aAAE,EAAuBnB,MAC9BC,SAAQ,UAAE2B,EAAKV,KAAKC,mBAAZ,aAAE,EAAuBlB,SACjCC,IAAG,UAAE0B,EAAKV,KAAKC,mBAAZ,aAAE,EAAuBY,aAMrCzB,EAAO0B,aAAazB,gBAAkBA,GACrC,uBAAKJ,UAAU,kCACb,gBAAC,IAAD,CAAQC,GAAG,UAAUC,MAAM,sBAMlCmB,EAAWC,OAAS,GACnB,gBAAC,WAAD,KACE,sBAAItB,UAAU,2BAAd,QACO,wBAAMA,UAAU,eAAhB,WAGP,gBAAC,IAAD,CAAM8B,GAAI,EAAGC,GAAI,EAAG/B,UAAU,4BAC3BqB,EAAWG,KACV,SAACC,EAAMC,GAAP,mBACEA,EAAQrB,GACN,gBAAC,EAAD,CACEsB,IAAKD,EACL9B,KAAI,UAAE6B,EAAKV,KAAKC,mBAAZ,aAAE,EAAuBpB,KAC7BC,MAAK,UAAE4B,EAAKV,KAAKC,mBAAZ,aAAE,EAAuBnB,MAC9BC,SAAQ,UAAE2B,EAAKV,KAAKC,mBAAZ,aAAE,EAAuBlB,SACjCC,IAAG,UAAE0B,EAAKV,KAAKC,mBAAZ,aAAE,EAAuBgB,qBAYlD7B,EAAO0B,aAAe,CACpBzB,cAAe,IACfC,UAAW,KAGb,S,8FC3FA,UAjBmB,SAAC,GAAkB,IAAhBP,EAAe,EAAfA,SACpB,OACE,gBAAC,IAAD,CAAQA,SAAUA,EAAUmC,OAAO,GACjC,gBAAC,IAAD,CACEpC,MAAM,SACNqC,YAAY,SACZnC,IAAKD,EAASqC,KACdC,MAAOC,MAGT,uBAAKrC,UAAU,YACb,gBAAC,IAAD,U,qBCjBR,IAAIsC,EAAQ,EAAQ,MAEpB,SAASC,EAAKC,GACV,OAAOF,EAAMG,cAAc,MAAMD,EAAMF,EAAMG,cAAc,OAAO,CAAC,SAAW,UAAU,SAAW,UAAU,EAAI,0hBAA0hB,KAAO,kBAGtpBF,EAAIV,aAAe,CAAC,MAAQ,KAAK,OAAS,KAAK,QAAU,YAAY,KAAO,QAE5Ea,EAAOC,QAAUJ,EAEjBA,EAAIK,QAAUL,G,kCCVd,IAAe,IAA0B","file":"component---src-pages-events-js-3344d3eeab50d01fda99.js","sourcesContent":["import * as React from \"react\"\nimport Button from \"./button\"\nimport PinIcon from \"../../svg/pin.svg\"\n\nconst CardEvent = ({ date, title, location, url }) => {\n  return (\n    <div className=\"decor py-5 pl-8 pr-4 lg:pr-32 bg-white rounded-2xl shadow-xl before:bg-accent\">\n      <div className=\"mb-1 font-display text-night\">{date}</div>\n      <div className=\"mb-2 text-xl sm:text-2xl text-dark\">{title}</div>\n      <div className=\"flex text-sm text-gray\">\n        <PinIcon className=\"mt-0.5 mr-1 h-4 w-auto\" />\n        <div className=\"flex-1\">{location}</div>\n      </div>\n\n      {url && (\n        <Button\n          to={url}\n          label=\"Attend\"\n          className=\"mt-6 lg:!absolute lg:top-1/2 lg:-right-8 lg:mt-0 lg:transform lg:-translate-y-1/2\"\n        />\n      )}\n    </div>\n  )\n}\n\nexport default CardEvent\n","import * as React from \"react\"\nimport Button from \"./button\"\nimport PinIcon from \"../../svg/pin.svg\"\n\nconst CardEventAlt = ({ date, title, location, url }) => {\n  return (\n    <div className=\"decor py-5 pl-8 lg:pr-40 bg-dark/20 rounded-2xl before:bg-dark/10\">\n      <div className=\"mb-1 text-sm font-display text-light\">{date}</div>\n      <div className=\"mb-2  text-lg  text-white\">{title}</div>\n      <div className=\"flex text-sm text-light\">\n        <PinIcon className=\"mt-0.5 mr-1 h-4 w-auto\" />\n        <div className=\"flex-1 lg:pr-2\">{location}</div>\n      </div>\n\n      {url && (\n        <Button\n          to={url}\n          label=\"Recordings\"\n          className=\"mt-6 lg:!absolute lg:top-1/2 lg:-right-8 lg:mt-0 lg:transform lg:-translate-y-1/2 mr-2\"\n        />\n      )}\n    </div>\n  )\n}\n\nexport default CardEventAlt\n","import * as React from \"react\"\nimport { useStaticQuery, graphql } from \"gatsby\"\nimport { Grid, Container } from \"./ui/grid\"\nimport CardEvent from \"./ui/card-event\"\nimport CardEventAlt from \"./ui/card-event-alt\"\nimport Button from \"./ui/button\"\nimport Map from \"../svg/map.svg\"\n\nconst Events = ({ upcomingLimit, pastLimit }) => {\n  const date = new Date()\n  const query = useStaticQuery(\n    graphql`\n      query {\n        allMdx(\n          filter: { fileAbsolutePath: { regex: \"/(content/events)/\" } }\n          sort: { fields: [frontmatter___date], order: DESC }\n        ) {\n          edges {\n            node {\n              frontmatter {\n                title\n                date(formatString: \"MMM DD, YYYY\")\n                location\n                attend\n                recordings\n              }\n            }\n          }\n        }\n      }\n    `\n  )\n\n  const upcomingEvents = query.allMdx.edges\n    .filter(event => {\n      const eventDate = event.node.frontmatter?.date\n      const startDate = new Date(eventDate)\n      return eventDate ? startDate > date : false\n    })\n    .sort((a, b) => a.node.frontmatter?.date < b.node.frontmatter?.date)\n\n  const pastEvents = query.allMdx.edges.filter(event => {\n    const eventDate = event.node.frontmatter?.date\n    const startDate = new Date(eventDate)\n    return eventDate ? startDate < date : false\n  })\n\n  return (\n    <div className=\"relative pt-32 overflow-hidden\">\n      <Map className=\"absolute -z-1 top-12 left-[40%] h-auto w-[140%] sm:w-[1700px] text-[#4d8dff]\" />\n\n      <Container>\n        {upcomingEvents.length > 0 && (\n          <React.Fragment>\n            <h2>\n              Upcomings <span className=\"text-accent\">Events</span>\n            </h2>\n            <p>Today, {date.toDateString()}</p>\n\n            <div className=\"mt-12 max-w-4xl space-y-7\">\n              {upcomingEvents.map(\n                (item, index) =>\n                  index < upcomingLimit && (\n                    <CardEvent\n                      key={index}\n                      date={item.node.frontmatter?.date}\n                      title={item.node.frontmatter?.title}\n                      location={item.node.frontmatter?.location}\n                      url={item.node.frontmatter?.attend}\n                    />\n                  )\n              )}\n            </div>\n\n            {Events.defaultProps.upcomingLimit !== upcomingLimit && (\n              <div className=\"text-center mt-10 lg:text-left\">\n                <Button to=\"/events\" label=\"View all Events\" />\n              </div>\n            )}\n          </React.Fragment>\n        )}\n\n        {pastEvents.length > 0 && (\n          <React.Fragment>\n            <h2 className=\"mt-20 text-3xl lg:mt-32\">\n              Past <span className=\"text-accent\">Events</span>\n            </h2>\n\n            <Grid md={2} xl={3} className=\"pr-6 pt-4 pb-6 lg:gap-12\">\n              {pastEvents.map(\n                (item, index) =>\n                  index < pastLimit && (\n                    <CardEventAlt\n                      key={index}\n                      date={item.node.frontmatter?.date}\n                      title={item.node.frontmatter?.title}\n                      location={item.node.frontmatter?.location}\n                      url={item.node.frontmatter?.recordings}\n                    />\n                  )\n              )}\n            </Grid>\n          </React.Fragment>\n        )}\n      </Container>\n    </div>\n  )\n}\n\nEvents.defaultProps = {\n  upcomingLimit: 1000,\n  pastLimit: 1000,\n}\n\nexport default Events\n","import * as React from \"react\"\nimport Layout from \"../components/layout\"\nimport Seo from \"../components/seo\"\nimport Events from \"../components/events\"\nimport thumbnail from \"../images/thumbnail-default.png\"\n\nconst EventsPage = ({ location }) => {\n  return (\n    <Layout location={location} decor={false}>\n      <Seo\n        title=\"Events\"\n        description=\"Events\"\n        url={location.href}\n        image={thumbnail}\n      />\n\n      <div className=\"md:pt-12\">\n        <Events />\n      </div>\n    </Layout>\n  )\n}\n\nexport default EventsPage\n","var React = require('react');\n\nfunction Pin (props) {\n    return React.createElement(\"svg\",props,React.createElement(\"path\",{\"fillRule\":\"evenodd\",\"clipRule\":\"evenodd\",\"d\":\"M8 1C10.7614 1 13 3.14903 13 5.8C13 7.5526 12.1594 9.2728 10.7875 10.8364C9.775 11.9884 8.50063 13 8 13C7.49937 13 6.22438 11.989 5.2125 10.8364C3.84125 9.2728 3 7.5526 3 5.8C3 3.14903 5.23858 1 8 1ZM8 4C9.03553 4 9.875 4.86622 9.875 5.93476C9.875 7.0033 9.03553 7.86952 8 7.86952C6.96447 7.86952 6.125 7.0033 6.125 5.93476C6.125 4.86622 6.96447 4 8 4ZM7.375 5.93476C7.375 6.29094 7.65482 6.57968 8 6.57968C8.34518 6.57968 8.625 6.29094 8.625 5.93476C8.625 5.57858 8.34518 5.28984 8 5.28984C7.65482 5.28984 7.375 5.57858 7.375 5.93476Z\",\"fill\":\"currentColor\"}));\n}\n\nPin.defaultProps = {\"width\":\"16\",\"height\":\"16\",\"viewBox\":\"0 0 16 16\",\"fill\":\"none\"};\n\nmodule.exports = Pin;\n\nPin.default = Pin;\n","export default __webpack_public_path__ + \"static/thumbnail-default-28daea91b25c13140a8352ed6a1aa031.png\";"],"sourceRoot":""}